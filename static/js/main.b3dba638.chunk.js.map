{"version":3,"sources":["components/Board.js","components/PlayBtn.js","components/ScoreBoard.js","components/randBoard.js","components/App.js","reportWebVitals.js","index.js"],"names":["Board","props","deepCopy","arr","copy","forEach","elem","Array","isArray","push","deepCopyObject","obj","tempObj","Object","entries","key","value","displayGrid","grid","enemy","map","items","index","subItems","sIndex","className","item","visible","fossil","onClick","newItem","newArr","row","col","setOneGrid","player","setTwoGrid","setTurn","turn","setPlaying","newScore","score","setScore","handleClick","id","PlayBtn","useState","text","setText","useEffect","P1","P2","newGame","ScoreBoard","get_random","Min","Max","Math","floor","random","isvalid","board","horizontal","x","y","fossil_size","board_size","i","setFossil","fossilSize","createFossil","counter","createFossils","fossils","length","count","newBoard","j","p1Board","p2Board","App","twoGrid","oneGrid","playing","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAEe,SAASA,EAAMC,GAC7B,IAUMC,EAAW,SAAXA,EAAYC,GACjB,IAAIC,EAAO,GAYX,OAXAD,EAAIE,SAAQ,SAACC,GACRC,MAAMC,QAAQF,GACjBF,EAAKK,KAAKP,EAASI,IAEC,kBAATA,EACVF,EAAKK,KAAKC,EAAeJ,IAEzBF,EAAKK,KAAKH,MAINF,GAGFM,EAAiB,SAAjBA,EAAkBC,GAEvB,IADA,IAAIC,EAAU,GACd,MAAyBC,OAAOC,QAAQH,GAAxC,eAA8C,CAAC,IAAD,sBAApCI,EAAoC,KAA/BC,EAA+B,KACzCT,MAAMC,QAAQQ,GACjBJ,EAAQG,GAAOb,EAASc,GAGvBJ,EAAQG,GADY,kBAAVC,EACKN,EAAeM,GAEfA,EAIlB,OAAOJ,GAsBFK,EAAc,SAACC,EAAMC,GAC1B,OAAOD,EAAKE,KAAI,SAACC,EAAOC,GACvB,OACC,6BACED,EAAMD,KAAI,SAACG,EAAUC,GACrB,OAAIL,EAEF,oBAECM,WAtEWC,EAsEUH,EArExBG,EAAKC,QACDD,EAAKE,OAAS,QAAU,OAEzB,aAmEAC,QAAS,WACHN,EAASI,SA9BH,SAACD,GACpB,IAAII,EAAO,2BACPJ,GADO,IAEVC,SAAS,IAEJI,EAAS7B,EAASD,EAAMkB,OAO9B,GANAY,EAAOL,EAAKM,KAAKN,EAAKO,KAAOH,EAE7B7B,EAAMiC,WAAWjC,EAAMkC,QACvBlC,EAAMmC,WAAWL,GACjB9B,EAAMoC,QAAuB,OAAfpC,EAAMqC,KAAgB,KAAO,MAC3CrC,EAAMsC,YAAW,GACbb,EAAKE,OAAQ,CAChB,IAAIY,EAAQ,eAAQvC,EAAMwC,OAC1BD,EAASvC,EAAMqC,QACfrC,EAAMyC,SAASF,IAeeG,CAAYpB,KAH/BA,EAASqB,IAQZrB,EAASI,QACRJ,EAASK,OACL,oBAAsBH,UAAU,SAAvBF,EAASqB,IAEnB,oBAAsBnB,UAAU,eAAvBF,EAASqB,IAEtBrB,EAASK,OACL,oBAAsBH,UAAU,UAAvBF,EAASqB,IAGpB,mCAvFM,IAAClB,WA8FnB,OACC,gCACC,gCACC,gCAAQT,EAAYhB,EAAMkB,OAAO,OAElC,gCACC,gCAAQF,EAAYhB,EAAMkC,e,MCrGf,SAASU,EAAQ5C,GAAQ,IAAD,EACd6C,mBAAS,cADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAEtCC,qBAAU,YACLhD,EAAMwC,MAAMS,GAAK,GAAKjD,EAAMwC,MAAMU,GAAK,IAC1CH,EAAQ,iBAEP,CAACD,IAQJ,OAAO,wBAAQlB,QAPK,WACN,gBAATkB,IACHC,EAAQ,cACR/C,EAAMmD,WAEPnD,EAAMsC,YAAW,IAEX,SAA+BQ,ICNxB,SAASM,EAAWpD,GAClC,OACC,gCACC,6CACaA,EAAMwC,MAAMS,GADzB,SACmCjD,EAAMwC,MAAMU,MAE3B,KAAnBlD,EAAMwC,MAAMS,IAAa,yCACN,KAAnBjD,EAAMwC,MAAMU,IAAa,4CChB7B,SAASG,EAAWC,EAAKC,GACxB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,EAKtD,SAASK,EAAQC,EAAOC,EAAYC,EAAGC,EAAGC,EAAaC,GACtD,IAAIC,EACJ,GAAIL,EAAY,CACf,GAAIC,EAAIE,GAAeC,EAAY,OAAO,EAC1C,IAAKC,EAAIJ,EAAGI,EAAIJ,EAAIE,EAAaE,IAChC,IACwB,IAAvBN,EAAMG,GAAGG,GAAGvC,QACXoC,EAAI,GAAK,IAAgC,IAA3BH,EAAMG,EAAI,GAAGG,GAAGvC,QAC9BoC,EAAI,EAAIE,IAAyC,IAA3BL,EAAMG,EAAI,GAAGG,GAAGvC,OAEvC,OAAO,EAET,GACEmC,EAAI,GAAK,IAAgC,IAA3BF,EAAMG,GAAGD,EAAI,GAAGnC,QAC9BmC,EAAIE,EAAcC,IACmB,IAArCL,EAAMG,GAAGD,EAAIE,GAAarC,OAE3B,OAAO,MACF,CACN,GAAIoC,EAAIC,GAAeC,EAAY,OAAO,EAC1C,IAAKC,EAAIH,EAAGG,EAAIH,EAAIC,EAAaE,IAChC,IACwB,IAAvBN,EAAMM,GAAGJ,GAAGnC,QACXmC,EAAI,GAAK,IAAgC,IAA3BF,EAAMM,GAAGJ,EAAI,GAAGnC,QAC9BmC,EAAI,EAAIG,IAAyC,IAA3BL,EAAMM,GAAGJ,EAAI,GAAGnC,OAEvC,OAAO,EAET,GACEoC,EAAI,GAAK,IAAgC,IAA3BH,EAAMG,EAAI,GAAGD,GAAGnC,QAC9BoC,EAAIC,EAAcC,IACmB,IAArCL,EAAMG,EAAIC,GAAaF,GAAGnC,OAE3B,OAAO,EAET,OAAO,EAKR,IAAMwC,EAAY,SAACP,EAAOC,EAAYC,EAAGC,EAAGK,GAC3C,IAAIF,EACJ,GAAIL,EACH,IAAKK,EAAIJ,EAAGI,EAAIJ,EAAIM,EAAYF,IAC/BN,EAAMG,GAAGG,GAAGvC,QAAS,OAGtB,IAAKuC,EAAIH,EAAGG,EAAIH,EAAIK,EAAYF,IAC/BN,EAAMM,GAAGJ,GAAGnC,QAAS,GAKxB,SAAS0C,EAAaT,EAAOK,EAAYD,GAExC,IADA,IAAIM,EAAU,EACPA,EAAU,KAAK,CACrBA,IACA,IAAIT,EAAaL,KAAKE,SAAW,GAC7BI,EAAI,EACJC,EAAI,EAQR,GAPIF,GACHC,EAAIT,EAAW,EAAGY,EAAaD,EAAc,GAC7CD,EAAIV,EAAW,EAAGY,EAAa,KAE/BH,EAAIT,EAAW,EAAGY,EAAa,GAC/BF,EAAIV,EAAW,EAAGY,EAAaD,EAAc,IAEzCL,EAAQC,EAAOC,EAAYC,EAAGC,EAAGC,EAAaC,GAAnD,CACAE,EAAUP,EAAOC,EAAYC,EAAGC,EAAGC,GACnC,QClDF,IDoEeO,MAbf,SAAuBX,EAAOK,GAM7B,IALA,IAAIO,EAAU,CACb,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEIN,EAAI,EAAGA,EAAIM,EAAQC,OAAQP,IACnC,IAAK,IAAIQ,EAAQ,EAAGA,EAAQF,EAAQN,GAAG,GAAIQ,IAC1CL,EAAaT,EAAOK,EAAYO,EAAQN,GAAG,KClFxCS,G,MAAW,WAEhB,IADA,IAAMf,EAAQ,GACLM,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3BN,EAAMpD,KAAK,IACX,IAAK,IAAIoE,EAAI,EAAGA,EAAI,EAAGA,IACtBhB,EAAMM,GAAG1D,KAAK,CACbmC,GAAI,GAAKuB,EAAIU,EACblD,SAAS,EACTC,QAAQ,EACRI,IAAKmC,EACLlC,IAAK4C,IAKR,OADAL,EAAcX,EAAO,GACdA,IAGFiB,EAAU,GACPX,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3BW,EAAQrE,KAAK,IACb,IAAK,IAAIoE,EAAI,EAAGA,EAAI,EAAGA,IACtBC,EAAQX,GAAG1D,KAAK,CACfmC,GAAI,GAAKuB,EAAIU,EACblD,SAAS,EACTC,QAAQ,EACRI,IAAKmC,EACLlC,IAAK4C,IAMR,IADA,IAAME,EAAU,GACPZ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3BY,EAAQtE,KAAK,IACb,IAAK,IAAIoE,EAAI,EAAGA,EAAI,EAAGA,IACtBE,EAAQZ,GAAG1D,KAAK,CACfmC,GAAI,GAAKuB,EAAIU,EACblD,SAAS,EACTC,QAAQ,EACRI,IAAKmC,EACLlC,IAAK4C,IAKRL,EAAcM,EAAS,GACvBN,EAAcO,EAAS,GA+CRC,MA5Cf,WAAgB,IAAD,EACgBlC,mBAASiC,GADzB,mBACPE,EADO,KACE7C,EADF,OAEgBU,mBAASgC,GAFzB,mBAEPI,EAFO,KAEEhD,EAFF,OAGUY,mBAAS,MAHnB,mBAGPR,EAHO,KAGDD,EAHC,OAIYS,mBAAS,CAAEI,GAAI,EAAGC,GAAI,IAJlC,mBAIPV,EAJO,KAIAC,EAJA,OAKgBI,oBAAS,GALzB,mBAKPqC,EALO,KAKE5C,EALF,KAkBd,OAZAU,qBAAU,WACTmC,QAAQC,IAAI,mCACV,CAAC/C,IAWH,qBAAKb,UAAU,MAAf,SACC,sBAAKA,UAAU,WAAf,UACC,wCAAWa,KACX,cAACe,EAAD,CAAYZ,MAAOA,KACjB0C,GACD,cAACtC,EAAD,CAASN,WAAYA,EAAYE,MAAOA,EAAOW,QAdnC,WACff,EAAQ,MACRE,GAAW,GACXG,EAAS,CAAEQ,GAAI,EAAGC,GAAI,IACtBjB,EAAW0C,KACXxC,EAAWwC,QAWRO,GACA,cAACnF,EAAD,CACCsC,KAAMA,EACND,QAASA,EACTlB,MAAO+D,EACP/C,OAAQ8C,EACR7C,WAAYA,EACZF,WAAYA,EACZK,WAAYA,EACZE,MAAOA,EACPC,SAAUA,UCjFD4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.b3dba638.chunk.js","sourcesContent":["import \"../css/board.css\";\n\nexport default function Board(props) {\n\tconst styleTile = (item) => {\n\t\tif (item.visible) {\n\t\t\treturn item.fossil ? \"found\" : \"miss\";\n\t\t}\n\t\treturn \"enemyTile\";\n\t};\n\t/*\n\tarr : 2d array \n\treturns a copy of a 2d array\n\t*/\n\tconst deepCopy = (arr) => {\n\t\tlet copy = [];\n\t\tarr.forEach((elem) => {\n\t\t\tif (Array.isArray(elem)) {\n\t\t\t\tcopy.push(deepCopy(elem));\n\t\t\t} else {\n\t\t\t\tif (typeof elem === \"object\") {\n\t\t\t\t\tcopy.push(deepCopyObject(elem));\n\t\t\t\t} else {\n\t\t\t\t\tcopy.push(elem);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn copy;\n\t};\n\t// Helper function for deepCopy to deal with Objects\n\tconst deepCopyObject = (obj) => {\n\t\tlet tempObj = {};\n\t\tfor (let [key, value] of Object.entries(obj)) {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\ttempObj[key] = deepCopy(value);\n\t\t\t} else {\n\t\t\t\tif (typeof value === \"object\") {\n\t\t\t\t\ttempObj[key] = deepCopyObject(value);\n\t\t\t\t} else {\n\t\t\t\t\ttempObj[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tempObj;\n\t};\n\n\tconst handleClick = (item) => {\n\t\tlet newItem = {\n\t\t\t...item,\n\t\t\tvisible: true,\n\t\t};\n\t\tconst newArr = deepCopy(props.enemy);\n\t\tnewArr[item.row][item.col] = newItem;\n\t\t//const newPlayer = deepCopy(props.player);\n\t\tprops.setOneGrid(props.player);\n\t\tprops.setTwoGrid(newArr);\n\t\tprops.setTurn(props.turn === \"P1\" ? \"P2\" : \"P1\");\n\t\tprops.setPlaying(false);\n\t\tif (item.fossil) {\n\t\t\tlet newScore = { ...props.score };\n\t\t\tnewScore[props.turn]++;\n\t\t\tprops.setScore(newScore);\n\t\t}\n\t};\n\n\tconst displayGrid = (grid, enemy) => {\n\t\treturn grid.map((items, index) => {\n\t\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t{items.map((subItems, sIndex) => {\n\t\t\t\t\t\tif (enemy) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\tkey={subItems.id}\n\t\t\t\t\t\t\t\t\tclassName={styleTile(subItems)}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tif (!subItems.visible) handleClick(subItems);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t></td>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (subItems.visible) {\n\t\t\t\t\t\t\t\tif (subItems.fossil) {\n\t\t\t\t\t\t\t\t\treturn <td key={subItems.id} className=\"found\"></td>;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn <td key={subItems.id} className=\"miss-player\"></td>;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (subItems.fossil) {\n\t\t\t\t\t\t\t\treturn <td key={subItems.id} className=\"fossil\"></td>;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn <td /*onClick={() => test(grid[index][sIndex])}*/> </td>;\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<table>\n\t\t\t\t<tbody>{displayGrid(props.enemy, true)}</tbody>\n\t\t\t</table>\n\t\t\t<table>\n\t\t\t\t<tbody>{displayGrid(props.player)}</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n","import { useEffect, useState } from \"react\";\nimport \"../css/playBtn.css\";\nexport default function PlayBtn(props) {\n\tconst [text, setText] = useState(\"Start Turn\");\n\tuseEffect(() => {\n\t\tif (props.score.P1 > 2 || props.score.P2 > 2) {\n\t\t\tsetText(\"Play Again?\");\n\t\t}\n\t}, [text]);\n\tconst handleClick = () => {\n\t\tif (text === \"Play Again?\") {\n\t\t\tsetText(\"Start Turn\");\n\t\t\tprops.newGame();\n\t\t}\n\t\tprops.setPlaying(true);\n\t};\n\treturn <button onClick={handleClick}>{text}</button>;\n}\n","/*\nthe winning score is 17 assumming \nthe fossils array in creatFossils is:\n[\n\t[1, 4],   1 * 4 = 4\n\t[3, 3],\t  3 * 3 = 9\n\t[2, 2],\t  2 * 2 = 4\n\t          4 + 9 + 4 = 17\n]\n*/\nexport default function ScoreBoard(props) {\n\treturn (\n\t\t<div>\n\t\t\t<h3>\n\t\t\t\tScore: P1: {props.score.P1}, P2: {props.score.P2}\n\t\t\t</h3>\n\t\t\t{props.score.P1 === 17 && <h1>P1 WINS</h1>}\n\t\t\t{props.score.P2 === 17 && <h1>P2 WINS</h1>}\n\t\t</div>\n\t);\n}\n","// get random number of from min to max\nfunction get_random(Min, Max) {\n\treturn Math.floor(Math.random() * (Max - Min + 1)) + Min;\n}\n//checks whether we can place a valid\n//fossil given a starting x and y position\n// horizontal determines whether a fossil is placed horizontally or vertically\nfunction isvalid(board, horizontal, x, y, fossil_size, board_size) {\n\tlet i;\n\tif (horizontal) {\n\t\tif (x + fossil_size >= board_size) return false;\n\t\tfor (i = x; i < x + fossil_size; i++) {\n\t\t\tif (\n\t\t\t\tboard[y][i].fossil === true ||\n\t\t\t\t(y - 1 >= 0 && board[y - 1][i].fossil === true) || // to ensure that fossils do not \"touch each other\"\n\t\t\t\t(y + 1 < board_size && board[y + 1][i].fossil === true)\n\t\t\t)\n\t\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\t(x - 1 >= 0 && board[y][x - 1].fossil === true) ||\n\t\t\t(x + fossil_size < board_size &&\n\t\t\t\tboard[y][x + fossil_size].fossil === true)\n\t\t)\n\t\t\treturn false;\n\t} else {\n\t\tif (y + fossil_size >= board_size) return false;\n\t\tfor (i = y; i < y + fossil_size; i++) {\n\t\t\tif (\n\t\t\t\tboard[i][x].fossil === true ||\n\t\t\t\t(x - 1 >= 0 && board[i][x - 1].fossil === true) || // to ensure that fossils do not \"touch each other\"\n\t\t\t\t(x + 1 < board_size && board[i][x + 1].fossil === true)\n\t\t\t)\n\t\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\t(y - 1 >= 0 && board[y - 1][x].fossil === true) ||\n\t\t\t(y + fossil_size < board_size &&\n\t\t\t\tboard[y + fossil_size][x].fossil === true)\n\t\t)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\n\n//creates a fossil on the board\n//coordinates are ordered y, x (board[y][x])\nconst setFossil = (board, horizontal, x, y, fossilSize) => {\n\tlet i;\n\tif (horizontal) {\n\t\tfor (i = x; i < x + fossilSize; i++) {\n\t\t\tboard[y][i].fossil = true;\n\t\t}\n\t} else {\n\t\tfor (i = y; i < y + fossilSize; i++) {\n\t\t\tboard[i][x].fossil = true;\n\t\t}\n\t}\n};\n\nfunction createFossil(board, board_size, fossil_size) {\n\tvar counter = 0;\n\twhile (counter < 200) {\n\t\tcounter++;\n\t\tvar horizontal = Math.random() < 0.5; //random true or false\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tif (horizontal) {\n\t\t\tx = get_random(0, board_size - fossil_size - 1);\n\t\t\ty = get_random(0, board_size - 1);\n\t\t} else {\n\t\t\tx = get_random(0, board_size - 1);\n\t\t\ty = get_random(0, board_size - fossil_size - 1);\n\t\t}\n\t\tif (!isvalid(board, horizontal, x, y, fossil_size, board_size)) continue; //check if it conflicts\n\t\tsetFossil(board, horizontal, x, y, fossil_size);\n\t\tbreak;\n\t}\n}\n\n//create all fossils\nfunction createFossils(board, board_size) {\n\tvar fossils = [\n\t\t[1, 4],\n\t\t[3, 3],\n\t\t[2, 2],\n\t]; // first element of every pair is number of fossils, second element is length of the fossil\n\tfor (var i = 0; i < fossils.length; i++) {\n\t\tfor (var count = 0; count < fossils[i][0]; count++) {\n\t\t\tcreateFossil(board, board_size, fossils[i][1]);\n\t\t}\n\t}\n}\n\nexport default createFossils;\n","import Board from \"./Board\";\nimport PlayBtn from \"./PlayBtn\";\nimport ScoreBoard from \"./ScoreBoard\";\nimport createFossils from \"./randBoard\";\nimport \"../css/app.css\";\nimport { useEffect, useState } from \"react\";\n\nconst newBoard = () => {\n\tconst board = [];\n\tfor (let i = 0; i < 8; i++) {\n\t\tboard.push([]);\n\t\tfor (let j = 0; j < 8; j++) {\n\t\t\tboard[i].push({\n\t\t\t\tid: \"\" + i + j,\n\t\t\t\tvisible: false,\n\t\t\t\tfossil: false,\n\t\t\t\trow: i,\n\t\t\t\tcol: j,\n\t\t\t});\n\t\t}\n\t}\n\tcreateFossils(board, 8);\n\treturn board;\n};\n\nconst p1Board = [];\nfor (let i = 0; i < 8; i++) {\n\tp1Board.push([]);\n\tfor (let j = 0; j < 8; j++) {\n\t\tp1Board[i].push({\n\t\t\tid: \"\" + i + j,\n\t\t\tvisible: false,\n\t\t\tfossil: false,\n\t\t\trow: i,\n\t\t\tcol: j,\n\t\t});\n\t}\n}\n\nconst p2Board = [];\nfor (let i = 0; i < 8; i++) {\n\tp2Board.push([]);\n\tfor (let j = 0; j < 8; j++) {\n\t\tp2Board[i].push({\n\t\t\tid: \"\" + i + j,\n\t\t\tvisible: false,\n\t\t\tfossil: false,\n\t\t\trow: i,\n\t\t\tcol: j,\n\t\t});\n\t}\n}\n// board[y][x]\ncreateFossils(p1Board, 8);\ncreateFossils(p2Board, 8);\n//console.log(testBoard);\n\nfunction App() {\n\tconst [twoGrid, setTwoGrid] = useState(p2Board);\n\tconst [oneGrid, setOneGrid] = useState(p1Board);\n\tconst [turn, setTurn] = useState(\"P1\");\n\tconst [score, setScore] = useState({ P1: 0, P2: 0 });\n\tconst [playing, setPlaying] = useState(false);\n\tuseEffect(() => {\n\t\tconsole.log(\"the state of turn has changed\");\n\t}, [turn]);\n\n\tconst newGame = () => {\n\t\tsetTurn(\"P1\");\n\t\tsetPlaying(false);\n\t\tsetScore({ P1: 0, P2: 0 });\n\t\tsetOneGrid(newBoard());\n\t\tsetTwoGrid(newBoard());\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"game-con\">\n\t\t\t\t<h1>Turn: {turn}</h1>\n\t\t\t\t<ScoreBoard score={score} />\n\t\t\t\t{!playing && (\n\t\t\t\t\t<PlayBtn setPlaying={setPlaying} score={score} newGame={newGame} />\n\t\t\t\t)}\n\t\t\t\t{playing && (\n\t\t\t\t\t<Board\n\t\t\t\t\t\tturn={turn}\n\t\t\t\t\t\tsetTurn={setTurn}\n\t\t\t\t\t\tenemy={oneGrid}\n\t\t\t\t\t\tplayer={twoGrid}\n\t\t\t\t\t\tsetTwoGrid={setTwoGrid}\n\t\t\t\t\t\tsetOneGrid={setOneGrid}\n\t\t\t\t\t\tsetPlaying={setPlaying}\n\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\tsetScore={setScore}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}